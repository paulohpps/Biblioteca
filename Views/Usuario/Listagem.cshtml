@using X.PagedList.Mvc
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model X.PagedList.PagedList<Biblioteca.Models.Usuario>
@{
    ViewData["Title"] = "Listagem de Usuários";
}
<div class="row">
    <div class="col-md-12">
        <form class="form-inline" method="POST">
            <div class="form-group mb-2">
                <select name="TipoFiltro" class="form-control">
                    <option value="Nome">Nome</option>
                    <option value="Login">Login</option>
                </select>
            </div>
            <div class="form-group mb-2 mx-sm-3">
                <input type="text" placeholder="Filtro" name="Filtro" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary mb-2">Pesquisar</button>
        </form>
    </div>
</div>
@{
    if (Model.Count > 0)
    {
    <div class="row">
              <div class="col-md-12">
                    <table class="table table-striped">
                       <thead>
                            <tr>
                                <th>Id</th>
                                <th>Nome</th>
                                <th>Login</th>
                                <th></th>
                            </tr>
                       </thead>
                       <tbody>
                          @foreach (Usuario user in Model)
                          {
                               <tr>
                               <td>@user.Id</td>
                               <td>@user.Nome</td>
                               <td>@user.Login</td>
                               <td><a href="/Usuario/Edicao/@user.Id">Editar</a></td>
                                @if(user.Nome != "admin")
                                {
                                    <td><a href="/Usuario/Excluir/@user.Id" class="text-danger">Excluir</a></td>
                                }
                                else
                                {
                                    <td>Administrador do sistema.</td>
                                }
                            </tr>
                          }
                        </tbody>
                    </table>
              </div>                                                          
    </div>

    }
    else
    {
    <a>Nenhum resultado encontrado.</a>
    }
}
<div class="row">
    <div class="col-md-8">
             @Html.PagedListPager(Model, page => Url.Action("listagem",new { page }),
        new PagedListRenderOptions { FunctionToTransformEachPageLink = (liTag, aTag) => 
            { aTag.Attributes.Add("class", "page-link".ToString()); return aTag; }, 
            LiElementClasses = new[] { "page-item" }, UlElementClasses = new[] { "pagination" } })
    </div>
    <div class="col-md-4">
         <span class="pull-rigth"> 
                Listando Registros de @Model.FirstItemOnPage a @Model.LastItemOnPage de uma total de @Model.TotalItemCount
         </span>
    </div>
</div>
            
    