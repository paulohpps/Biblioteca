@using X.PagedList.Mvc
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model X.PagedList.PagedList<Biblioteca.Models.Emprestimo>
@{
    ViewData["Title"] = "Listagem de Empréstimos";
}

<div class="row">
    <div class="col-md-12">
        <form class="form-inline" method="POST">
            <div class="form-group mb-2">
                <select name="TipoFiltro" class="form-control">
                    <option value="Usuario">Usuário</option>
                    <option value="Livro">Livro</option>
                </select>
            </div>
            <div class="form-group mb-2 mx-sm-3">
                <input type="text" placeholder="Filtro" name="Filtro" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary mb-2">Pesquisar</button>
        </form>
    </div>
</div>
@{
    if (Model.Count > 0)
    {
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Usuario</th>
                            <th>Data Empréstimo</th>
                            <th>Data Devolução</th>
                            <th>Livro</th>
                            <th>Autor</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Emprestimo e in Model)
                        {
                            @if (e.DataDevolucao < DateTime.Now)
                            {
                                <tr class="bg-danger text-white font-weight-bold">
                                <td>@e.Id</td>
                                <td>@e.NomeUsuario</td>
                                <td>@e.DataEmprestimo.ToString("dd/MM/yyyy")</td>
                                <td>@e.DataDevolucao.ToString("dd/MM/yyyy")</td>
                                <td>@e.Livro.Titulo</td>
                                <td>@e.Livro.Autor</td>
                                <td><a href="/Emprestimo/Edicao/@e.Id">Editar</a></td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                <td>@e.Id</td>
                                <td>@e.NomeUsuario</td>
                                <td>@e.DataEmprestimo.ToString("dd/MM/yyyy")</td>
                                <td>@e.DataDevolucao.ToString("dd/MM/yyyy")</td>
                                <td>@e.Livro.Titulo</td>
                                <td>@e.Livro.Autor</td>
                                <td><a href="/Emprestimo/Edicao/@e.Id">Editar</a></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>

    }
    else
    {
        <a>Nenhum resultado encontrado.</a>
    }
}
<div class="row">
    <div class="col-md-8">
        @Html.PagedListPager(Model, page => Url.Action("listagem",new { page }),
        new PagedListRenderOptions { FunctionToTransformEachPageLink = (liTag, aTag) => 
            { aTag.Attributes.Add("class", "page-link".ToString()); return aTag; }, 
            LiElementClasses = new[] { "page-item" }, UlElementClasses = new[] { "pagination" } })       </div>
       <div class="col-md-4">
            <span class="pull-rigth"> 
                Listando Registros de @Model.FirstItemOnPage a @Model.LastItemOnPage de uma total de @Model.TotalItemCount
            </span>
      </div>
</div>