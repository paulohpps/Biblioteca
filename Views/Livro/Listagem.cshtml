@using X.PagedList.Mvc
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model X.PagedList.PagedList<Biblioteca.Models.Livro>
@{
    ViewData["Title"] = "Listagem de Livros";
}
<div class="row">
    <div class="col-md-12">
        <form class="form-inline" method="POST">
            <div class="form-group mb-2">
                <select name="TipoFiltro" class="form-control">
                    <option value="Autor">Autor</option>
                    <option value="Titulo">TÃ­tulo</option>
                </select>
            </div>
            <div class="form-group mb-2 mx-sm-3">
                <input type="text" placeholder="Filtro" name="Filtro" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary mb-2">Pesquisar</button>
        </form>
    </div>
</div>
@{
    if (Model.Count > 0)
    {
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Titulo</th>
                            <th>Autor</th>
                            <th>Ano</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Livro l in Model)
                        {
                            <tr>
                                <td>@l.Id</td>
                                <td>@l.Titulo</td>
                                <td>@l.Autor</td>
                                <td>@l.Ano</td>
                                <td><a href="/Livro/Edicao/@l.Id">Editar</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

   
    }
    else
    {
        <a>Nenhum resultado encontrado.</a>
    }
}
<div class="row">
     <div class="col-md-8 ">
        @Html.PagedListPager(Model, page => Url.Action("listagem",new { page }),
        new PagedListRenderOptions { FunctionToTransformEachPageLink = (liTag, aTag) => 
            { aTag.Attributes.Add("class", "page-link".ToString()); return aTag; }, 
            LiElementClasses = new[] { "page-item" }, UlElementClasses = new[] { "pagination" } })
     </div>
     <div class="col-md-4">
         <span class="pull-rigth"> 
                Listando Registros de @Model.FirstItemOnPage a @Model.LastItemOnPage de uma total de @Model.TotalItemCount
         </span>
     </div>
</div>

